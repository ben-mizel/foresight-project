{"version":3,"sources":["CreatePatient.js","CreateAppointment.js","AppointmentList.js","PatientCard.js","PatientList.js","PatientProfile.js","Container.js","App.js","reportWebVitals.js","index.js"],"names":["CreatePatient","props","onChange","updateNewPatient","onSubmit","submitNewPatient","id","type","placeholder","required","value","CreateAppointment","updateNewAppointment","submitNewAppointment","name","Rect","styled","div","AppointmentList","useState","appointments","setAppointments","appointmentType","appointment","setAppointment","useEffect","fetch","patientName","then","res","json","data","catch","err","console","log","appointmentItems","i","length","startDate","startTime","push","event","newAppointment","target","updatedAppointment","Object","assign","method","headers","body","JSON","stringify","addedAppointment","copyOfAppointments","parse","unshift","reset","preventDefault","PatientCard","patientData","firstName","lastName","dob","phone","displayName","patient","onClick","selectPatient","PatientList","searchText","setSearchText","patients","currPatient","fullName","toLowerCase","includes","size","PatientProfile","Column","Container","state","newPatient","patientSelected","bind","newPatientData","updatedPatient","this","setState","addedPatient","copyOfPatients","clickedPatient","Component","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAmBeA,MAnBf,SAAuBC,GACrB,OACE,gCACE,gDACA,uBAAMC,SAAUD,EAAME,iBAAkBC,SAAUH,EAAMI,iBAAxD,UACE,uBAAOC,GAAG,YAAYC,KAAK,OAAOC,YAAY,aAAaC,UAAQ,IACnE,uBACA,uBAAOH,GAAG,WAAWC,KAAK,OAAOC,YAAY,YAAYC,UAAQ,IACjE,uBACA,uBAAOH,GAAG,MAAMC,KAAK,OAAOC,YAAY,gBAAgBC,UAAQ,IAChE,uBACA,uBAAOH,GAAG,QAAQC,KAAK,MAAMC,YAAY,eAAeC,UAAQ,IAChE,uBACA,uBAAOF,KAAK,SAASG,MAAM,kB,OCSpBC,MAtBf,SAA2BV,GACzB,OACE,gCACE,uBACA,uBAAMC,SAAUD,EAAMW,qBAAsBR,SAAUH,EAAMY,qBAA5D,UACE,uBAAOP,GAAG,YAAYC,KAAK,OAAOC,YAAY,OAAOC,UAAQ,IAC7D,uBAAOH,GAAG,YAAYC,KAAK,OAAOO,KAAK,OAAOL,UAAQ,IACtD,yBAAQH,GAAG,kBAAkBQ,KAAK,OAAOL,UAAQ,EAAjD,UACE,wBAAQC,MAAM,GAAd,kBACA,wBAAQA,MAAM,gBAAd,2BACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,WAAd,yBAEF,uBAAOH,KAAK,SAASG,MAAM,8B,sSCZnC,IAAMK,EAAOC,IAAOC,IAAV,KAwEKC,MA9Df,SAAyBjB,GAAQ,IAAD,EAEYkB,mBAAS,IAFrB,mBAEtBC,EAFsB,KAERC,EAFQ,OAGUF,mBAAS,CAACG,gBAAiB,kBAHrC,mBAGtBC,EAHsB,KAGTC,EAHS,KAK9BC,qBAAU,WACRC,MAAM,qBAAD,OAAsBzB,EAAM0B,cAC9BC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJV,EAAgBU,MAEjBC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC3B,CAAChC,EAAM0B,cAgCV,IADA,IAAMS,EAAmB,GAChBC,EAAI,EAAGA,EAAIjB,EAAakB,OAAQD,GAAK,EAAG,CAAC,IAAD,EACOjB,EAAaiB,GAA3D/B,EADuC,EACvCA,GAAIiC,EADmC,EACnCA,UAAWC,EADwB,EACxBA,UAAWlB,EADa,EACbA,gBAClCc,EAAiBK,KACf,eAAC1B,EAAD,CAAyBT,GAAIA,EAA7B,UACE,+BAAKiC,EAAL,MAAmBC,KACnB,4BAAIlB,MAFK,QAAUhB,IAOzB,OACE,gCACE,cAAC,EAAD,CAAmBM,qBAxCvB,SAA8B8B,GAC5B,IAAMC,EAAiB,GACvBA,EAAeD,EAAME,OAAOtC,IAAMoC,EAAME,OAAOlC,MAC/C,IAAMmC,EAAqBC,OAAOC,OAAO,GAAIxB,EAAaoB,GAC1DnB,EAAeqB,IAoCkDhC,qBAjCnE,SAA8B6B,GAC5BhB,MAAM,qBAAD,OAAsBzB,EAAM0B,aAAe,CAC9CqB,OAAQ,OACRC,QAAS,CACT,eAAgB,oBAEhBC,KAAMC,KAAKC,UAAU7B,KAEtBK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,IAAMsB,EAAmBtB,EAAK,GACxBuB,EAAqBH,KAAKI,MAAMJ,KAAKC,UAAUhC,IACrDkC,EAAmBE,QAAQH,GAC3BhC,EAAgBiC,MAEjBtB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAC1BS,EAAME,OAAOa,QACbf,EAAMgB,oBAiBFtB,M,sSCpER,IAAMrB,EAAOC,IAAOC,IAAV,KA+BK0C,MArBf,SAAqB1D,GACnB,GAAIA,EAAM2D,YAAa,CAAC,IAAD,EACuB3D,EAAM2D,YAA1CC,EADa,EACbA,UAAWC,EADE,EACFA,SAAUC,EADR,EACQA,IAAKC,EADb,EACaA,MAC5BC,EAAW,UAAMJ,EAAN,YAAmBC,GACpC,OACE,eAAC,EAAD,WACE,6BAAKG,IACL,gDAAmBF,KACnB,+CAAkBC,KAClB,cAAC,EAAD,CAAiBrC,YAAW,UAAKkC,EAAL,YAAkBC,QAIpD,IAAMG,EAAW,UAAMhE,EAAMiE,QAAQJ,SAApB,aAAiC7D,EAAMiE,QAAQL,WAChE,OACE,cAAC,EAAD,UACE,mBAAGM,QAAS,SAACzB,GAAWzC,EAAMmE,cAAc1B,EAAOzC,EAAMiE,UAAzD,SAAqED,O,wICzB3E,IAAMlD,EAAOC,IAAOC,IAAV,KA8BKoD,MAxBf,SAAqBpE,GAInB,IAJ2B,IAAD,EACWkB,mBAAS,IADpB,mBACnBmD,EADmB,KACPC,EADO,KAGpBC,EAAW,GACRnC,EAAI,EAAGA,EAAIpC,EAAMuE,SAASlC,OAAQD,GAAK,EAAG,CACjD,IAAMoC,EAAcxE,EAAMuE,SAASnC,GAC3BwB,EAA4BY,EAA5BZ,UAAWC,EAAiBW,EAAjBX,SAAUxD,EAAOmE,EAAPnE,GACvBoE,EAAQ,UAAMb,EAAN,YAAmBC,GAC5BQ,EAAWhC,OAELoC,EAASC,cAAcC,SAASN,EAAWK,gBACpDH,EAAS/B,KAAK,cAAC,EAAD,CAAgCnC,GAAIoE,EAAUR,QAASO,EAAaL,cAAenE,EAAMmE,eAAvE,QAAU9D,IAF1CkE,EAAS/B,KAAK,cAAC,EAAD,CAAgCnC,GAAIoE,EAAUR,QAASO,EAAaL,cAAenE,EAAMmE,eAAvE,QAAU9D,IAM9C,OACE,eAAC,EAAD,WACE,8CACA,uBAAOC,KAAK,OAAOC,YAAY,YAAYqE,KAAK,KAAK3E,SAAU,SAACwC,GAAD,OAAW6B,EAAc7B,EAAME,OAAOlC,UACnG8D,MCfOM,MAZf,SAAwB7E,GACtB,OAAIA,EAAM2D,YAAYC,UAElB,gCACE,iDACA,cAAC,EAAD,CAAaD,YAAa3D,EAAM2D,iBAI/B,M,8TCLT,IAAM7C,EAAOC,IAAOC,IAAV,KAMJ8D,EAAS/D,IAAOC,IAAV,KA4EG+D,E,kDApEb,WAAY/E,GAAQ,IAAD,8BACjB,cAAMA,IACDgF,MAAQ,CACXT,SAAU,GACVU,WAAY,CACVrB,UAAW,GACXC,SAAU,GACVC,IAAK,GACLC,MAAO,IAETmB,gBAAiB,IAGnB,EAAKhF,iBAAmB,EAAKA,iBAAiBiF,KAAtB,gBACxB,EAAK/E,iBAAmB,EAAKA,iBAAiB+E,KAAtB,gBACxB,EAAKhB,cAAgB,EAAKA,cAAcgB,KAAnB,gBAfJ,E,6DAkBF1C,GACf,IAAM2C,EAAiB,GACvBA,EAAe3C,EAAME,OAAOtC,IAAMoC,EAAME,OAAOlC,MAC/C,IAAM4E,EAAiBxC,OAAOC,OAAO,GAAIwC,KAAKN,MAAMC,WAAYG,GAChEE,KAAKC,SAAS,CAACN,WAAYI,M,uCAGZ5C,GAAQ,IAAD,OACtBhB,MAAM,gBAAiB,CACrBsB,OAAQ,OACRC,QAAS,CACT,eAAgB,oBAEhBC,KAAMC,KAAKC,UAAUmC,KAAKN,MAAMC,cAEjCtD,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,IAAM0D,EAAe1D,EAAK,GACpB2D,EAAiBvC,KAAKI,MAAMJ,KAAKC,UAAU,EAAK6B,MAAMT,WAC5DkB,EAAelC,QAAQiC,GACvB,EAAKD,SAAS,CAAChB,SAAUkB,OAE1B1D,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAC1BS,EAAME,OAAOa,QACbf,EAAMgB,mB,oCAGMhB,EAAOiD,GACnBJ,KAAKC,SAAS,CAACL,gBAAiBQ,IAChCjD,EAAMgB,mB,0CAGa,IAAD,OAClBhC,MAAM,iBACHE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAI,EAAKyD,SAAS,CAAEhB,SAAUzC,OACvCC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,+BAI5B,OACE,eAAC,EAAD,WACE,cAAC8C,EAAD,UAAQ,cAAC,EAAD,CAAe5E,iBAAkBoF,KAAKpF,iBAAkBE,iBAAkBkF,KAAKlF,qBACvF,cAAC0E,EAAD,UAAQ,cAAC,EAAD,CAAaP,SAAUe,KAAKN,MAAMT,SAAUJ,cAAemB,KAAKnB,kBACxE,cAACW,EAAD,UAAQ,cAAC,EAAD,CAAgBnB,YAAa2B,KAAKN,MAAME,2B,GA/DhCS,aCTTC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCOSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrE,MAAK,YAAkD,IAA/CsE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5f464c2e.chunk.js","sourcesContent":["function CreatePatient(props) {\n  return (\n    <div>\n      <h1>Create Patient</h1>\n      <form onChange={props.updateNewPatient} onSubmit={props.submitNewPatient}>\n        <input id=\"firstName\" type=\"text\" placeholder=\"First Name\" required/>\n        <br/>\n        <input id=\"lastName\" type=\"text\" placeholder=\"Last Name\" required/>\n        <br/>\n        <input id=\"dob\" type=\"date\" placeholder=\"Date of Birth\" required/>\n        <br/>\n        <input id=\"phone\" type=\"tel\" placeholder=\"Phone Number\" required/>\n        <br/>\n        <input type=\"submit\" value=\"Submit\"/>\n      </form>\n    </div>\n  );\n}\n\nexport default CreatePatient;","function CreateAppointment(props) {\n  return (\n    <div>\n      <hr></hr>\n      <form onChange={props.updateNewAppointment} onSubmit={props.submitNewAppointment}>\n        <input id=\"startDate\" type=\"date\" placeholder=\"Date\" required/>\n        <input id=\"startTime\" type=\"time\" name=\"time\" required/>\n        <select id=\"appointmentType\" name=\"Type\" required>\n          <option value=\"\">Type</option>\n          <option value=\"Initial Visit\">Initial Visit</option>\n          <option value=\"Follow Up\">Follow Up</option>\n          <option value=\"Short Visit\">Short Visit</option>\n          <option value=\"Long Visit\">Long Visit</option>\n          <option value=\"Vaccination\">Vaccination</option>\n          <option value=\"Physical\">Physical</option>\n        </select>\n        <input type=\"submit\" value=\"Create Appointment\"/>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateAppointment;","import { useState, useEffect } from 'react';\nimport CreateAppointment from './CreateAppointment';\nimport styled from 'styled-components'\n\nconst Rect = styled.div`\n  background-color: white;\n  border: 2px solid black;\n  border-radius: 5px;\n  margin: 5px 5px;\n  text-align: center;\n  font-size: 10px;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n`;\n\nfunction AppointmentList(props) {\n  \n  const [ appointments, setAppointments ] = useState([]);\n  const [ appointment, setAppointment ] = useState({appointmentType: 'Initial Visit'});\n\n  useEffect(() => {\n    fetch(`/api/appointments/${props.patientName}`)\n      .then(res => res.json())\n      .then(data => {\n        setAppointments(data);\n      })\n      .catch(err => console.log(err))\n  }, [props.patientName]);\n\n\n\n  function updateNewAppointment(event) {\n    const newAppointment = {};\n    newAppointment[event.target.id] = event.target.value;\n    const updatedAppointment = Object.assign({}, appointment, newAppointment);\n    setAppointment(updatedAppointment);\n  }\n\n  function submitNewAppointment(event) {\n    fetch(`/api/appointments/${props.patientName}`, {\n      method: 'POST',\n      headers: {\n      'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(appointment),\n    })\n    .then(res => res.json())\n    .then(data => {\n      const addedAppointment = data[0];\n      const copyOfAppointments = JSON.parse(JSON.stringify(appointments));\n      copyOfAppointments.unshift(addedAppointment);\n      setAppointments(copyOfAppointments);\n    })\n    .catch(err => console.log(err))\n    event.target.reset();\n    event.preventDefault();\n  }\n\n  const appointmentItems = [];\n  for (let i = 0; i < appointments.length; i += 1) {\n    const { id, startDate, startTime, appointmentType } = appointments[i];\n    appointmentItems.push(\n      <Rect key={'Key: ' + id} id={id}>\n        <h4>{startDate} @ {startTime}</h4>\n        <p>{appointmentType}</p>\n      </Rect>\n    );\n  }\n\n  return (\n    <div>\n      <CreateAppointment updateNewAppointment={updateNewAppointment} submitNewAppointment={submitNewAppointment}/>\n      { appointmentItems }\n    </div>\n  );\n}\n\nexport default AppointmentList;","import AppointmentList from './AppointmentList'\nimport styled from 'styled-components'\n\nconst Rect = styled.div`\n  background-color: white;\n  border: 2px solid black;\n  border-radius: 5px;\n  margin: 5px 5px;\n  text-align: center;\n  font-size: 10px;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n`;\n\nfunction PatientCard(props) {\n  if (props.patientData) {\n    const { firstName, lastName, dob, phone } = props.patientData;\n    const displayName = `${firstName} ${lastName}`;\n    return (\n      <Rect>\n        <h2>{displayName}</h2>\n        <p>Date of Birth: {dob}</p>\n        <p>Phone Number: {phone}</p>\n        <AppointmentList patientName={`${firstName} ${lastName}`}/>\n      </Rect>\n    );\n  }\n  const displayName = `${props.patient.lastName}, ${props.patient.firstName}`\n  return (\n    <Rect>\n      <p onClick={(event) => {props.selectPatient(event, props.patient)}}>{displayName}</p>\n    </Rect>\n  );\n}\n\nexport default PatientCard;","import PatientCard from './PatientCard'\nimport styled from 'styled-components'\nimport { useState } from 'react'\n\nconst Rect = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n`;\n\nfunction PatientList(props) {\n  const [searchText, setSearchText ] = useState('');\n\n  const patients = [];\n  for (let i = 0; i < props.patients.length; i += 1) {\n    const currPatient = props.patients[i];\n    const { firstName, lastName, id } = currPatient;\n    const fullName = `${firstName} ${lastName}`;\n    if (!searchText.length) {\n      patients.push(<PatientCard key={'Key: ' + id} id={fullName} patient={currPatient} selectPatient={props.selectPatient}/>)\n    } else if (fullName.toLowerCase().includes(searchText.toLowerCase())) {\n      patients.push(<PatientCard key={'Key: ' + id} id={fullName} patient={currPatient} selectPatient={props.selectPatient}/>)\n    }\n  }\n\n  return (\n    <Rect>\n      <h1>Patient List</h1>\n      <input type=\"text\" placeholder=\"Search...\" size=\"15\" onChange={(event) => setSearchText(event.target.value)}/>\n      { patients }\n    </Rect>\n  );\n}\n\nexport default PatientList;","import PatientCard from './PatientCard'\n\nfunction PatientProfile(props) {\n  if (props.patientData.firstName) {\n    return (\n      <div>\n        <h1>Patient Profile</h1>\n        <PatientCard patientData={props.patientData}/>\n      </div>\n    );\n  }\n  return null;\n}\n\nexport default PatientProfile;","import { Component } from 'react'\nimport styled from 'styled-components'\nimport CreatePatient from './CreatePatient'\nimport PatientList from './PatientList'\nimport PatientProfile from './PatientProfile'\n\nconst Rect = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  background-color: rgba(255,146,0,1);\n`;\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 25%;\n`;\n\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      patients: [],\n      newPatient: {\n        firstName: '',\n        lastName: '',\n        dob: '',\n        phone: '',\n      },\n      patientSelected: {},\n    };\n\n    this.updateNewPatient = this.updateNewPatient.bind(this);\n    this.submitNewPatient = this.submitNewPatient.bind(this);\n    this.selectPatient = this.selectPatient.bind(this);\n  }\n\n  updateNewPatient(event) {\n    const newPatientData = {};\n    newPatientData[event.target.id] = event.target.value;\n    const updatedPatient = Object.assign({}, this.state.newPatient, newPatientData);\n    this.setState({newPatient: updatedPatient});\n  }\n\n  submitNewPatient(event) {\n    fetch('/api/patients', {\n      method: 'POST',\n      headers: {\n      'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(this.state.newPatient),\n    })\n    .then(res => res.json())\n    .then(data => {\n      const addedPatient = data[0];\n      const copyOfPatients = JSON.parse(JSON.stringify(this.state.patients));\n      copyOfPatients.unshift(addedPatient);\n      this.setState({patients: copyOfPatients});\n    })\n    .catch(err => console.log(err))\n    event.target.reset();\n    event.preventDefault();\n  }\n\n  selectPatient(event, clickedPatient) {\n    this.setState({patientSelected: clickedPatient});\n    event.preventDefault();\n  }\n\n  componentDidMount() {\n    fetch('/api/patients')\n      .then(res => res.json())\n      .then(data => this.setState({ patients: data }))\n      .catch(err => console.log(err))\n  }\n\n  render() {\n    return (\n      <Rect>\n        <Column><CreatePatient updateNewPatient={this.updateNewPatient} submitNewPatient={this.submitNewPatient}/></Column>\n        <Column><PatientList patients={this.state.patients} selectPatient={this.selectPatient}/></Column>\n        <Column><PatientProfile patientData={this.state.patientSelected}/></Column>\n      </Rect>\n    );\n  }\n}\n\nexport default Container;","import Container from './Container';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}